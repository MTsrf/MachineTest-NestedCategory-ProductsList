{"ast":null,"code":"var _jsxFileName = \"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Category/Index.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Container, Col, Button, Row } from 'react-bootstrap';\nimport axiosInstance from '../../helper/axiosInstance';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAdd, IoIosTrash, IoIosCloudUpload } from 'react-icons/io';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  const [category, setCategory] = useState();\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data\n        } = await axiosInstance.get(\"/getCategory\");\n        setCategory(data);\n      } catch (error) {}\n    };\n    fetchData();\n  }, []);\n  const renderCategories = categories => {\n    let myCategories = [];\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n    return myCategories;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"actionBtnContainer\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Actions: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n              nodes: renderCategories(category.categories),\n              checked: checked,\n              expanded: expanded,\n              onCheck: checked => setChecked(checked),\n              onExpand: expanded => setExpanded(expanded),\n              icons: {\n                check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 44\n                }, this),\n                uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 46\n                }, this),\n                halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 48\n                }, this),\n                expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 50\n                }, this),\n                expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 49\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Category, \"0gKq42W15uCfr5tGYnYHkEQMmGM=\");\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["axios","React","useEffect","useState","Container","Col","Button","Row","axiosInstance","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","IoIosAdd","IoIosTrash","IoIosCloudUpload","Category","category","setCategory","checked","setChecked","expanded","setExpanded","fetchData","data","get","error","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"sources":["/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Category/Index.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Container, Col, Button, Row } from 'react-bootstrap'\nimport axiosInstance from '../../helper/axiosInstance'\nimport CheckboxTree from 'react-checkbox-tree';\nimport {\n    IoIosCheckboxOutline,\n    IoIosCheckbox,\n    IoIosArrowForward,\n    IoIosArrowDown,\n    IoIosAdd,\n    IoIosTrash,\n    IoIosCloudUpload\n} from 'react-icons/io'\nconst Category = () => {\n    const [category, setCategory] = useState()\n    const [checked, setChecked] = useState([]);\n    const [expanded, setExpanded] = useState([]);\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const { data } = await axiosInstance.get(\"/getCategory\")\n                setCategory(data)\n            } catch (error) {\n\n            }\n        }\n        fetchData()\n    }, [])\n    const renderCategories = (categories) => {\n        let myCategories = [];\n        for (let category of categories) {\n            myCategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.children.length > 0 && renderCategories(category.children)\n                }\n            );\n        }\n        return myCategories;\n    }\n\n    return (\n        <>\n            <div>\n                <Container>\n                    <Row>\n                        <Col md={12}>\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <h3>Category</h3>\n                                <div className=\"actionBtnContainer\">\n                                    <span>Actions: </span>\n                                    {/* <button onClick={handleShow}><IoIosAdd /> <span>Add</span></button>\n                                    <button onClick={deleteCategory}><IoIosTrash /> <span>Delete</span></button>\n                                    <button onClick={updateCategory}><IoIosCloudUpload /> <span>Edit</span></button> */}\n                                </div>\n\n                            </div>\n\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={12}>\n                            <CheckboxTree\n                                nodes={renderCategories(category.categories)}\n                                checked={checked}\n                                expanded={expanded}\n                                onCheck={checked => setChecked(checked)}\n                                onExpand={expanded => setExpanded(expanded)}\n                                icons={{\n                                    check: <IoIosCheckbox />,\n                                    uncheck: <IoIosCheckboxOutline />,\n                                    halfCheck: <IoIosCheckboxOutline />,\n                                    expandClose: <IoIosArrowForward />,\n                                    expandOpen: <IoIosArrowDown />\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    )\n}\n\nexport default Category\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}