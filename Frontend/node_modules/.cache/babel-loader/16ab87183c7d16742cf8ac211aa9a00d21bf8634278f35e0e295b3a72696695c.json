{"ast":null,"code":"var _jsxFileName = \"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Input/index.js\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n\n/**\n* @author\n* @function Input\n**/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = props => {\n  let input = null;\n  switch (props.type) {\n    case 'select':\n      input = /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [props.label && /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control form-control-sm\",\n          value: props.value,\n          onChange: props.onChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: props.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this), props.options.length > 0 ? props.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this)) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this);\n      break;\n    case 'text':\n    default:\n      input = /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [props.label && /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: props.type,\n          placeholder: props.placeholder,\n          value: props.value,\n          onChange: props.onChange,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: props.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this);\n  }\n  return input;\n};\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","Form","Input","props","input","type","label","value","onChange","placeholder","options","length","map","option","index","name","errorMessage"],"sources":["/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Input/index.js"],"sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n/**\n* @author\n* @function Input\n**/\n\nconst Input = (props) => {\n\n    let input = null;\n    switch (props.type) {\n        case 'select':\n            input = <Form.Group>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <select\n                    className=\"form-control form-control-sm\"\n                    value={props.value}\n                    onChange={props.onChange}\n                >\n                    <option value=\"\">{props.placeholder}</option>\n                    {\n                        props.options.length > 0 ?\n                            props.options.map((option, index) =>\n                                <option key={index} value={option.value}>{option.name}</option>\n                            ) : null\n                    }\n                </select>\n            </Form.Group>\n            break;\n        case 'text':\n        default:\n            input = <Form.Group>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <Form.Control\n                    type={props.type}\n                    placeholder={props.placeholder}\n                    value={props.value}\n                    onChange={props.onChange}\n                    {...props}\n                />\n                <Form.Text className=\"text-muted\">\n                    {props.errorMessage}\n                </Form.Text>\n            </Form.Group>\n    }\n\n\n    return input;\n\n}\n\nexport default Input"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;;AAEtC;AACA;AACA;AACA;AAHA;AAKA,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAErB,IAAIC,KAAK,GAAG,IAAI;EAChB,QAAQD,KAAK,CAACE,IAAI;IACd,KAAK,QAAQ;MACTD,KAAK,gBAAG,QAAC,IAAI,CAAC,KAAK;QAAA,WACdD,KAAK,CAACG,KAAK,iBAAI,QAAC,IAAI,CAAC,KAAK;UAAA,UAAEH,KAAK,CAACG;QAAK;UAAA;UAAA;UAAA;QAAA,QAAc,eACtD;UACI,SAAS,EAAC,8BAA8B;UACxC,KAAK,EAAEH,KAAK,CAACI,KAAM;UACnB,QAAQ,EAAEJ,KAAK,CAACK,QAAS;UAAA,wBAEzB;YAAQ,KAAK,EAAC,EAAE;YAAA,UAAEL,KAAK,CAACM;UAAW;YAAA;YAAA;YAAA;UAAA,QAAU,EAEzCN,KAAK,CAACO,OAAO,CAACC,MAAM,GAAG,CAAC,GACpBR,KAAK,CAACO,OAAO,CAACE,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC5B;YAAoB,KAAK,EAAED,MAAM,CAACN,KAAM;YAAA,UAAEM,MAAM,CAACE;UAAI,GAAxCD,KAAK;YAAA;YAAA;YAAA;UAAA,QAA6C,CAClE,GAAG,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAEX;MAAA;QAAA;QAAA;QAAA;MAAA,QACA;MACb;IACJ,KAAK,MAAM;IACX;MACIV,KAAK,gBAAG,QAAC,IAAI,CAAC,KAAK;QAAA,WACdD,KAAK,CAACG,KAAK,iBAAI,QAAC,IAAI,CAAC,KAAK;UAAA,UAAEH,KAAK,CAACG;QAAK;UAAA;UAAA;UAAA;QAAA,QAAc,eACtD,QAAC,IAAI,CAAC,OAAO;UACT,IAAI,EAAEH,KAAK,CAACE,IAAK;UACjB,WAAW,EAAEF,KAAK,CAACM,WAAY;UAC/B,KAAK,EAAEN,KAAK,CAACI,KAAM;UACnB,QAAQ,EAAEJ,KAAK,CAACK,QAAS;UAAA,GACrBL;QAAK;UAAA;UAAA;UAAA;QAAA,QACX,eACF,QAAC,IAAI,CAAC,IAAI;UAAC,SAAS,EAAC,YAAY;UAAA,UAC5BA,KAAK,CAACa;QAAY;UAAA;UAAA;UAAA;QAAA,QACX;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;EAAA;EAIrB,OAAOZ,KAAK;AAEhB,CAAC;AAAA,KA1CKF,KAAK;AA4CX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}