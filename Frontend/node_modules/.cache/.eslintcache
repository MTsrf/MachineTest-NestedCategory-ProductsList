[{"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/index.js":"1","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/App.js":"2","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Pages/HomePage.js":"3","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/NavBar/index.js":"4","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Category/Index.js":"5","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/helper/axiosInstance.js":"6","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Category/AddCategory/index.js":"7","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Modal/index.js":"8","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Pages/AddProduct.js":"9","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Product/index.js":"10","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Styled/styled-component.js":"11","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Pages/ProductsPage.js":"12","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/ProductList/index.js":"13"},{"size":430,"mtime":1668421049734,"results":"14","hashOfConfig":"15"},{"size":481,"mtime":1668431964691,"results":"16","hashOfConfig":"15"},{"size":262,"mtime":1668419873194,"results":"17","hashOfConfig":"15"},{"size":984,"mtime":1668432890518,"results":"18","hashOfConfig":"15"},{"size":5088,"mtime":1668427403999,"results":"19","hashOfConfig":"15"},{"size":201,"mtime":1668426485545,"results":"20","hashOfConfig":"15"},{"size":1475,"mtime":1668426239092,"results":"21","hashOfConfig":"15"},{"size":1184,"mtime":1668423461837,"results":"22","hashOfConfig":"15"},{"size":261,"mtime":1668428412770,"results":"23","hashOfConfig":"15"},{"size":5003,"mtime":1668431629743,"results":"24","hashOfConfig":"15"},{"size":986,"mtime":1668429784518,"results":"25","hashOfConfig":"15"},{"size":322,"mtime":1668443741294,"results":"26","hashOfConfig":"15"},{"size":2295,"mtime":1668443699226,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"5h4mdp",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"31"},"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/index.js",[],[],[],"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/App.js",[],[],"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Pages/HomePage.js",[],[],"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/NavBar/index.js",["72"],[],"import React from 'react'\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => {\n    return (\n        <>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand><Link to=\"/\">Product Listing</Link></Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <Nav.Link><Link to=\"/addproduct\">Add Product</Link></Nav.Link>\n                            <Nav.Link><Link to=\"/category\">category</Link></Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </>\n    )\n}\n\nexport default NavBar\n","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Category/Index.js",["73","74","75","76","77"],[],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Container, Col, Button, Row } from 'react-bootstrap'\nimport axiosInstance from '../../helper/axiosInstance'\nimport CheckboxTree from 'react-checkbox-tree';\nimport {\n    IoIosCheckboxOutline,\n    IoIosCheckbox,\n    IoIosArrowForward,\n    IoIosArrowDown,\n    IoIosAdd,\n    IoIosTrash,\n    IoIosCloudUpload\n} from 'react-icons/io'\nimport AddCategory from './AddCategory';\nconst Category = () => {\n    const [allcategory, setAllCategory] = useState([])\n    const [checked, setChecked] = useState([]);\n    const [expanded, setExpanded] = useState([]);\n    const [categoryName, setCategoryName] = useState('');\n    const [parentCategoryId, setParentCategoryId] = useState('');\n    const [update, setUpdate] = useState(false)\n    const [show, setShow] = useState(false);\n    const [error, setError] = useState('')\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const { data } = await axios.get(\"http://localhost:5000/getCategory\")\n                setAllCategory(data)\n            } catch (error) {\n                setError(error.message)\n            }\n        }\n        fetchData()\n    }, [update])\n\n    const handleClose = () => {\n        setShow(false);\n    }\n\n    const onSubmit = async () => {\n\n\n        if (categoryName === \"\") {\n            alert('Category name is required');\n            setShow(false);\n            return;\n        }\n        console.log(categoryName);\n        try {\n            const { data: { success } } = await axios.post(\"http://localhost:5000/addCategory\", { name: categoryName, parentId: parentCategoryId })\n            if (success) {\n                setUpdate(prev => !prev)\n            }\n        } catch (error) {\n            setError(error.message)\n        }\n\n        setCategoryName('');\n        setParentCategoryId('');\n        handleClose()\n    }\n\n    const handleShow = () => setShow(true);\n    const renderCategories = (categories) => {\n        let myCategories = [];\n        for (let category of categories) {\n            myCategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.children.length > 0 && renderCategories(category.children)\n                }\n            );\n        }\n        return myCategories;\n    }\n\n\n    const createCategoryList = (categories, options = []) => {\n\n        for (let category of categories) {\n            options.push({\n                value: category._id,\n                name: category.name,\n                parentId: category.parentId,\n                type: category.type\n            });\n            if (category.children.length > 0) {\n                createCategoryList(category.children, options)\n            }\n        }\n\n        return options;\n    }\n    const categoryList = createCategoryList(allcategory);\n\n    return (\n        <>\n            <div>\n                <Container>\n                    <Row>\n                        <Col md={12}>\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <h3>Category</h3>\n                                <div className=\"actionBtnContainer\">\n                                    <span>Actions: </span>\n                                    <button onClick={handleShow}><IoIosAdd /> <span>Add</span></button>\n                                </div>\n\n                            </div>\n\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={12}>\n                            <CheckboxTree\n                                nodes={renderCategories(allcategory)}\n                                checked={checked}\n                                expanded={expanded}\n                                onCheck={checked => setChecked(checked)}\n                                onExpand={expanded => setExpanded(expanded)}\n                                icons={{\n                                    check: <IoIosCheckbox />,\n                                    uncheck: <IoIosCheckboxOutline />,\n                                    halfCheck: <IoIosCheckboxOutline />,\n                                    expandClose: <IoIosArrowForward />,\n                                    expandOpen: <IoIosArrowDown />\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <AddCategory\n                    show={show}\n                    handleClose={() => setShow(false)}\n                    onSubmit={onSubmit}\n                    modalTitle={'Add New Category'}\n                    categoryName={categoryName}\n                    setCategoryName={setCategoryName}\n                    parentCategoryId={parentCategoryId}\n                    setParentCategoryId={setParentCategoryId}\n                    categoryList={categoryList}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default Category\n","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/helper/axiosInstance.js",[],[],"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Category/AddCategory/index.js",[],[],"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Modal/index.js",[],[],"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Pages/AddProduct.js",[],[],"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Product/index.js",["78","79"],[],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap'\nimport { Input, Select } from '../Styled/styled-component'\nconst Product = () => {\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState(\"\")\n    const [categoryId, setCategoryId] = useState(\"\");\n    const [allcategory, setAllCategory] = useState([])\n    const [error, setError] = useState(\"\")\n    const [alert, setAlert] = useState(false)\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const { data } = await axios.get(\"http://localhost:5000/getCategory\")\n                setAllCategory(data)\n            } catch (error) {\n                setError(error.message)\n            }\n        }\n        fetchData()\n    }, [])\n    console.log(allcategory);\n\n\n    const createCategoryList = (categories, options = []) => {\n        for (let category of categories) {\n            options.push({ value: category._id, name: category.name });\n            if (category.children.length > 0) {\n                createCategoryList(category.children, options);\n            }\n        }\n\n        return options;\n    };\n\n    const onSubmit = async () => {\n        console.log(name, description, price, categoryId);\n        try {\n            const { data } = await axios.post(\"http://localhost:5000/addProducts\", { name: name, description: description, price, price, category: categoryId })\n            setAlert(true)\n            if (data) {\n                setTimeout(() => {\n                    setAlert(false)\n                    setName(\"\")\n                    setDescription(\"\")\n                    setCategoryId(\"\")\n                    setPrice(\"\")\n                }, 1000)\n            }\n        } catch (error) {\n            setError(error.message)\n        }\n    }\n    return (\n\n        <div style={{ marginTop: \"30px\" }}>\n            <Container>\n                <h1>\n                    Add Product\n                </h1>\n                {alert && <Alert style={{ marginTop: '10px' }} variant=\"success\">\n                    Product added Successfully\n                </Alert>}\n                <div style={{ padding: \"20px\", borderRadius: '3px', backgroundColor: \"#e8eaf6\" }}>\n                    <Row>\n                        <Col>\n                            <p>Enter Product Name</p>\n                            <Input\n                                border={'1px solid black'}\n                                width={\"100%\"}\n                                value={name}\n                                placeholder=\"Category Name\"\n                                onChange={(e) => setName(e.target.value)}\n                            />\n\n                        </Col>\n                        <Col>\n                            <p>Enter description</p>\n                            <Input\n                                border={'1px solid black'}\n                                width={\"100%\"}\n                                placeholder=\"Description\"\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <p>Price</p>\n                            <Input\n                                border={'1px solid black'}\n                                width={\"100%\"}\n                                placeholder=\"Price\"\n                                value={price}\n                                onChange={(e) => setPrice(e.target.value)}\n                            />\n                        </Col>\n                        <Col>\n                            <p>Category</p>\n                            <Select\n                                name='place'\n                                className=\"headerSearchInput\"\n                                width={'100%'}\n                                value={categoryId}\n                                borderRadius={'0px'}\n                                onChange={(e) => setCategoryId(e.target.value)}\n                            >\n                                <option>Select Category</option>\n                                {createCategoryList(allcategory).map((option) => (\n                                    <option key={option.value} value={option.value}>\n                                        {option.name}\n                                    </option>\n                                ))}\n                            </Select>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Button style={{ backgroundColor: \"#5c6bc0\" }} onClick={onSubmit}>Submit</Button>\n                    </Row>\n                </div>\n            </Container >\n        </div >\n    )\n}\n\nexport default Product\n","/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/Styled/styled-component.js",[],[],"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Pages/ProductsPage.js",[],[],"/home/hp/Brototype/Machine Test/OnlineListing/Frontend/src/Component/ProductList/index.js",["80"],[],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap'\n\nconst ProductList = () => {\n    const [allcategory, setAllCategory] = useState([])\n    const [error, setError] = useState('')\n    useEffect(() => {\n\n        const fetchData = async () => {\n            try {\n                const { data } = await axios.get(\"http://localhost:5000/getCategory\")\n                setAllCategory(data)\n            } catch (error) {\n                setError(error.message)\n            }\n        }\n        fetchData()\n    }, [])\n    const renderCategories = (categories) => {\n        let myCategories = [];\n        for (let category of categories) {\n            myCategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.children.length > 0 && renderCategories(category.children)\n                }\n            );\n        }\n        return myCategories;\n    }\n    const cate = renderCategories(allcategory)\n    console.log(cate);\n    return (\n        <>\n            <div style={{ marginTop: '30px' }}>\n                <Container>\n                    <Row>\n                        <Col sm={3}>\n                            <ul>\n                                <li></li>\n                            </ul>\n                        </Col>\n                        <Col sm={9}>\n                            <Card style={{ width: '18rem' }}>\n                                <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n                                <Card.Body>\n                                    <Card.Title>Card Title</Card.Title>\n                                    <Card.Text>\n                                        Some quick example text to build on the card title and make up the\n                                        bulk of the card's content.\n                                    </Card.Text>\n                                    <Button variant=\"primary\">Go somewhere</Button>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n\n\n                    </Row>\n                </Container>\n            </div>\n        </>\n    )\n}\n\nexport default ProductList\n",{"ruleId":"81","severity":1,"message":"82","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":19},{"ruleId":"81","severity":1,"message":"85","line":3,"column":26,"nodeType":"83","messageId":"84","endLine":3,"endColumn":32},{"ruleId":"81","severity":1,"message":"86","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":21},{"ruleId":"81","severity":1,"message":"87","line":12,"column":5,"nodeType":"83","messageId":"84","endLine":12,"endColumn":15},{"ruleId":"81","severity":1,"message":"88","line":13,"column":5,"nodeType":"83","messageId":"84","endLine":13,"endColumn":21},{"ruleId":"81","severity":1,"message":"89","line":24,"column":12,"nodeType":"83","messageId":"84","endLine":24,"endColumn":17},{"ruleId":"81","severity":1,"message":"89","line":11,"column":12,"nodeType":"83","messageId":"84","endLine":11,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":41,"column":131,"nodeType":"92","messageId":"93","endLine":41,"endColumn":136},{"ruleId":"81","severity":1,"message":"89","line":7,"column":12,"nodeType":"83","messageId":"84","endLine":7,"endColumn":17},"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'axiosInstance' is defined but never used.","'IoIosTrash' is defined but never used.","'IoIosCloudUpload' is defined but never used.","'error' is assigned a value but never used.","no-dupe-keys","Duplicate key 'price'.","ObjectExpression","unexpected"]